{"ast":null,"code":"import * as i0 from \"@angular/core\";\nconst _c0 = [\"script\"];\nconst _c1 = [\"*\"];\nexport class TelegramLoginComponent {\n  convertToScript() {\n    const element = this.script.nativeElement;\n    const script = document.createElement('script');\n    script.src = 'https://telegram.org/js/telegram-widget.js?22';\n    script.setAttribute('data-telegram-login', \"SoftconBot\");\n    script.setAttribute('data-size', 'medium');\n    script.setAttribute('data-userpic', 'false');\n    // Callback function in global scope\n    script.setAttribute('data-onauth', 'loginViaTelegram(user)');\n    script.setAttribute('data-request-access', 'write');\n    element.parentElement.replaceChild(script, element);\n  }\n  ngAfterViewInit() {\n    this.convertToScript();\n  }\n  loginViaTelegram(user) {\n    const auth_data = user.auth_data;\n    const hash = user.hash;\n    const id = auth_data.id;\n    const first_name = auth_data.first_name;\n    const last_name = auth_data.last_name;\n    const username = auth_data.username;\n    const photo_url = auth_data.photo_url;\n    const auth_date = auth_data.auth_date;\n    const data_check_string = auth_data.dc_id.toString() + auth_data.id.toString() + auth_date.toString();\n    const data_check_hash = TelegramLoginWidget._hash(data_check_string);\n    if (hash === data_check_hash) {\n      console.log({\n        id,\n        first_name,\n        last_name,\n        username,\n        photo_url,\n        auth_date,\n        hash\n      });\n    } else {\n      console.error('Data integrity check failed');\n    }\n  }\n}\nTelegramLoginComponent.ɵfac = function TelegramLoginComponent_Factory(t) {\n  return new (t || TelegramLoginComponent)();\n};\nTelegramLoginComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: TelegramLoginComponent,\n  selectors: [[\"app-telegram-login\"]],\n  viewQuery: function TelegramLoginComponent_Query(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵviewQuery(_c0, 7);\n    }\n    if (rf & 2) {\n      let _t;\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.script = _t.first);\n    }\n  },\n  ngContentSelectors: _c1,\n  decls: 3,\n  vars: 0,\n  consts: [[\"style.display\", \"none\"], [\"script\", \"\"]],\n  template: function TelegramLoginComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵprojectionDef();\n      i0.ɵɵelementStart(0, \"div\", 0, 1);\n      i0.ɵɵprojection(2);\n      i0.ɵɵelementEnd();\n    }\n  },\n  encapsulation: 2\n});","map":{"version":3,"mappings":";;;AAQA,OAAM,MAAOA,sBAAsB;EAIjCC,eAAe;IACb,MAAMC,OAAO,GAAG,IAAI,CAACC,MAAM,CAACC,aAAa;IACzC,MAAMD,MAAM,GAAGE,QAAQ,CAACC,aAAa,CAAC,QAAQ,CAAC;IAC/CH,MAAM,CAACI,GAAG,GAAG,+CAA+C;IAC5DJ,MAAM,CAACK,YAAY,CAAC,qBAAqB,EAAE,YAAY,CAAC;IACxDL,MAAM,CAACK,YAAY,CAAC,WAAW,EAAE,QAAQ,CAAC;IAC1CL,MAAM,CAACK,YAAY,CAAC,cAAc,EAAE,OAAO,CAAC;IAC5C;IACAL,MAAM,CAACK,YAAY,CAAC,aAAa,EAAE,wBAAwB,CAAC;IAC5DL,MAAM,CAACK,YAAY,CAAC,qBAAqB,EAAE,OAAO,CAAC;IACnDN,OAAO,CAACO,aAAa,CAACC,YAAY,CAACP,MAAM,EAAED,OAAO,CAAC;EACrD;EAEAS,eAAe;IACb,IAAI,CAACV,eAAe,EAAE;EACxB;EAEAW,gBAAgB,CAACC,IAAS;IACxB,MAAMC,SAAS,GAAGD,IAAI,CAACC,SAAS;IAChC,MAAMC,IAAI,GAAGF,IAAI,CAACE,IAAI;IACtB,MAAMC,EAAE,GAAGF,SAAS,CAACE,EAAE;IACvB,MAAMC,UAAU,GAAGH,SAAS,CAACG,UAAU;IACvC,MAAMC,SAAS,GAAGJ,SAAS,CAACI,SAAS;IACrC,MAAMC,QAAQ,GAAGL,SAAS,CAACK,QAAQ;IACnC,MAAMC,SAAS,GAAGN,SAAS,CAACM,SAAS;IACrC,MAAMC,SAAS,GAAGP,SAAS,CAACO,SAAS;IACrC,MAAMC,iBAAiB,GAAGR,SAAS,CAACS,KAAK,CAACC,QAAQ,EAAE,GAAGV,SAAS,CAACE,EAAE,CAACQ,QAAQ,EAAE,GAAGH,SAAS,CAACG,QAAQ,EAAE;IACrG,MAAMC,eAAe,GAAGC,mBAAmB,CAACC,KAAK,CAACL,iBAAiB,CAAC;IAEpE,IAAIP,IAAI,KAAKU,eAAe,EAAE;MAC5BG,OAAO,CAACC,GAAG,CAAC;QACVb,EAAE;QACFC,UAAU;QACVC,SAAS;QACTC,QAAQ;QACRC,SAAS;QACTC,SAAS;QACTN;OACD,CAAC;KACH,MAAM;MACLa,OAAO,CAACE,KAAK,CAAC,6BAA6B,CAAC;;EAEhD;;AA9CW9B,sBAAsB;mBAAtBA,sBAAsB;AAAA;AAAtBA,sBAAsB;QAAtBA,sBAAsB;EAAA+B;EAAAC;IAAA;;;;;;;;;;;;;;;MAFtBC,iCAAkC;MAAAA,kBAAyB;MAAAA,iBAAM","names":["TelegramLoginComponent","convertToScript","element","script","nativeElement","document","createElement","src","setAttribute","parentElement","replaceChild","ngAfterViewInit","loginViaTelegram","user","auth_data","hash","id","first_name","last_name","username","photo_url","auth_date","data_check_string","dc_id","toString","data_check_hash","TelegramLoginWidget","_hash","console","log","error","selectors","viewQuery","i0"],"sourceRoot":"","sources":["D:\\ASP\\Telegram Integration\\Telegram Integration\\ClientApp\\src\\app\\telegram-login\\telegram-login.component.ts"],"sourcesContent":["import {AfterViewInit, Component, ElementRef, ViewChild} from '@angular/core';\n\ndeclare const TelegramLoginWidget: any;\n\n@Component({\n  selector: 'app-telegram-login',\n  template: '<div #script style.display=\"none\"><ng-content></ng-content></div>',\n})\nexport class TelegramLoginComponent implements AfterViewInit{\n\n  @ViewChild('script', {static: true}) script!: ElementRef;\n\n  convertToScript() {\n    const element = this.script.nativeElement;\n    const script = document.createElement('script');\n    script.src = 'https://telegram.org/js/telegram-widget.js?22';\n    script.setAttribute('data-telegram-login', \"SoftconBot\");\n    script.setAttribute('data-size', 'medium');\n    script.setAttribute('data-userpic', 'false')\n    // Callback function in global scope\n    script.setAttribute('data-onauth', 'loginViaTelegram(user)');\n    script.setAttribute('data-request-access', 'write');\n    element.parentElement.replaceChild(script, element);\n  }\n\n  ngAfterViewInit() {\n    this.convertToScript();\n  }\n\n  loginViaTelegram(user: any) {\n    const auth_data = user.auth_data;\n    const hash = user.hash;\n    const id = auth_data.id;\n    const first_name = auth_data.first_name;\n    const last_name = auth_data.last_name;\n    const username = auth_data.username;\n    const photo_url = auth_data.photo_url;\n    const auth_date = auth_data.auth_date;\n    const data_check_string = auth_data.dc_id.toString() + auth_data.id.toString() + auth_date.toString();\n    const data_check_hash = TelegramLoginWidget._hash(data_check_string);\n\n    if (hash === data_check_hash) {\n      console.log({\n        id,\n        first_name,\n        last_name,\n        username,\n        photo_url,\n        auth_date,\n        hash\n      });\n    } else {\n      console.error('Data integrity check failed');\n    }\n  }\n\n\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}