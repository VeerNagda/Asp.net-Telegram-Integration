{"ast":null,"code":"import { HttpParams } from \"@angular/common/http\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"@angular/forms\";\nfunction TelegramLoginComponent_div_6_div_6_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r3 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\")(1, \"label\");\n    i0.ɵɵtext(2, \"Password\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(3, \"input\", 5);\n    i0.ɵɵelementStart(4, \"button\", 2);\n    i0.ɵɵlistener(\"click\", function TelegramLoginComponent_div_6_div_6_Template_button_click_4_listener() {\n      i0.ɵɵrestoreView(_r3);\n      const ctx_r2 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r2.onsubmitPassword());\n    });\n    i0.ɵɵtext(5, \"Password\");\n    i0.ɵɵelementEnd()();\n  }\n}\nfunction TelegramLoginComponent_div_6_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r5 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\")(1, \"label\");\n    i0.ɵɵtext(2, \"Otp\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(3, \"input\", 4);\n    i0.ɵɵelementStart(4, \"button\", 2);\n    i0.ɵɵlistener(\"click\", function TelegramLoginComponent_div_6_Template_button_click_4_listener() {\n      i0.ɵɵrestoreView(_r5);\n      const ctx_r4 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r4.onsubmitOtp());\n    });\n    i0.ɵɵtext(5, \"Click\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(6, TelegramLoginComponent_div_6_div_6_Template, 6, 0, \"div\", 3);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(6);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.telegram.length > 0 && ctx_r0.telegram[0].message && ctx_r0.telegram[0].message.includes(\"password\"));\n  }\n}\nexport class TelegramLoginComponent {\n  constructor(http, fb) {\n    this.http = http;\n    this.fb = fb;\n    this.telegram = [];\n  }\n  ngOnInit() {\n    this.eventForm = this.fb.group({\n      phoneNumber: [''],\n      otp: [''],\n      password: ['']\n    });\n  }\n  onsubmitNumber() {\n    const eventData = {\n      ...this.eventForm.value\n    };\n    const params = new HttpParams().set('info', eventData.phoneNumber);\n    this.http.get(\"https://localhost:44408/telegramintegration/login\", {\n      params\n    }).subscribe(result => {\n      this.telegram = result;\n      if (this.telegram.length > 0 && this.telegram[0].message && this.telegram[0].message.includes(\"PHONE_NUMBER_INVALID\")) {\n        alert(\"Please Enter a valid Phone Number\");\n      }\n    }, error => console.error(error));\n  }\n  onsubmitOtp() {\n    const eventData = {\n      ...this.eventForm.value\n    };\n    const params = new HttpParams().set('info', eventData.otp);\n    this.http.get(\"https://localhost:44408/telegramintegration/login\", {\n      params\n    }).subscribe(result => {\n      this.telegram = result;\n      if (this.telegram.length > 0 && this.telegram[0].message && this.telegram[0].message.includes(\"PHONE_CODE_INVALID\")) {\n        alert(\"Please Enter a valid OTP\");\n      }\n    }, error => console.error(error));\n  }\n  onsubmitPassword() {\n    const eventData = {\n      ...this.eventForm.value\n    };\n    const params = new HttpParams().set('info', eventData.password);\n    this.http.get(\"https://localhost:44408/telegramintegration/login\", {\n      params\n    }).subscribe(result => {\n      this.telegram = result;\n      if (this.telegram.length > 0 && this.telegram[0].message && this.telegram[0].message.includes(\"password\")) {\n        alert(\"Please Enter a valid password\");\n      } else if (this.telegram.length > 0 && this.telegram[0].message && this.telegram[0].message.includes(\"success\")) {\n        alert(\"Login Successful\");\n        window.location.href = 'https://localhost:44408/';\n      }\n    }, error => console.error(error));\n  }\n}\nTelegramLoginComponent.ɵfac = function TelegramLoginComponent_Factory(t) {\n  return new (t || TelegramLoginComponent)(i0.ɵɵdirectiveInject(i1.HttpClient), i0.ɵɵdirectiveInject(i2.FormBuilder));\n};\nTelegramLoginComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: TelegramLoginComponent,\n  selectors: [[\"app-telegram-login\"]],\n  decls: 7,\n  vars: 2,\n  consts: [[\"autocomplete\", \"off\", 3, \"formGroup\"], [\"autocomplete\", \"off\", \"formControlName\", \"phoneNumber\", \"type\", \"text\"], [\"type\", \"button\", 3, \"click\"], [4, \"ngIf\"], [\"autocomplete\", \"off\", \"formControlName\", \"otp\", \"type\", \"text\"], [\"autocomplete\", \"off\", \"formControlName\", \"password\", \"type\", \"text\"]],\n  template: function TelegramLoginComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"form\", 0)(1, \"label\");\n      i0.ɵɵtext(2, \"Number\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(3, \"input\", 1);\n      i0.ɵɵelementStart(4, \"button\", 2);\n      i0.ɵɵlistener(\"click\", function TelegramLoginComponent_Template_button_click_4_listener() {\n        return ctx.onsubmitNumber();\n      });\n      i0.ɵɵtext(5, \"Click\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(6, TelegramLoginComponent_div_6_Template, 7, 1, \"div\", 3);\n      i0.ɵɵelementEnd();\n    }\n    if (rf & 2) {\n      i0.ɵɵproperty(\"formGroup\", ctx.eventForm);\n      i0.ɵɵadvance(6);\n      i0.ɵɵproperty(\"ngIf\", ctx.telegram.length > 0 && ctx.telegram[0].message && (ctx.telegram[0].message.includes(\"verification_code\") || ctx.telegram[0].message.includes(\"PHONE_CODE_INVALID\") || ctx.telegram[0].message.includes(\"password\") || ctx.telegram[0].message == null));\n    }\n  },\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":"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","names":["HttpParams","i0","TelegramLoginComponent","constructor","http","fb","ngOnInit","eventForm","group","phoneNumber","otp","password","onsubmitNumber","eventData","value","params","set","get","subscribe","result","telegram","length","message","includes","alert","error","console","onsubmitOtp","onsubmitPassword","window","location","href","selectors","decls","vars","consts","template","ctx"],"sourceRoot":"","sources":["D:\\ASP\\Telegram Integration\\Telegram Integration\\ClientApp\\src\\app\\telegram-login\\telegram-login.component.ts","D:\\ASP\\Telegram Integration\\Telegram Integration\\ClientApp\\src\\app\\telegram-login\\telegram-login.component.html"],"sourcesContent":["import {Component} from '@angular/core';\nimport {FormBuilder, FormControl, FormGroup, Validators} from \"@angular/forms\";\nimport {max} from \"rxjs\";\nimport {HttpClient, HttpParams} from \"@angular/common/http\";\nimport {Router} from \"@angular/router\";\n\n@Component({\n  selector: 'app-telegram-login',\n  templateUrl: './telegram-login.component.html',\n  styleUrls: ['./telegram-login.component.css']\n})\nexport class TelegramLoginComponent {\n  eventForm: any;\n  public telegram: Telegram[] = [];\n\n  constructor(private http: HttpClient, private fb: FormBuilder) {\n  }\n\n  ngOnInit(): void {\n    this.eventForm = this.fb.group({\n      phoneNumber: [''],\n      otp: [''],\n      password: [''],\n    });\n  }\n\n  onsubmitNumber() {\n    const eventData = {...this.eventForm.value};\n    const params = new HttpParams().set('info', eventData.phoneNumber);\n    this.http.get<Telegram[]>(\"https://localhost:44408/telegramintegration/login\", {params}).subscribe(result => {\n      this.telegram = result;\n      if (this.telegram.length > 0 && this.telegram[0].message && this.telegram[0].message.includes(\"PHONE_NUMBER_INVALID\")) {\n        alert(\"Please Enter a valid Phone Number\");\n      }\n\n    }, error => console.error(error));\n  }\n\n  onsubmitOtp() {\n    const eventData = {...this.eventForm.value};\n    const params = new HttpParams().set('info', eventData.otp);\n    this.http.get<Telegram[]>(\"https://localhost:44408/telegramintegration/login\", {params}).subscribe(result => {\n      this.telegram = result;\n      if (this.telegram.length > 0 && this.telegram[0].message && this.telegram[0].message.includes(\"PHONE_CODE_INVALID\")) {\n        alert(\"Please Enter a valid OTP\");\n      }\n\n    }, error => console.error(error));\n  }\n\n  onsubmitPassword() {\n    const eventData = {...this.eventForm.value};\n    const params = new HttpParams().set('info', eventData.password);\n    this.http.get<Telegram[]>(\"https://localhost:44408/telegramintegration/login\", {params}).subscribe(result => {\n      this.telegram = result;\n      if (this.telegram.length > 0 && this.telegram[0].message && this.telegram[0].message.includes(\"password\")) {\n        alert(\"Please Enter a valid password\");\n      } else if (this.telegram.length > 0 && this.telegram[0].message && this.telegram[0].message.includes(\"success\")) {\n        alert(\"Login Successful\");\n        window.location.href = 'https://localhost:44408/'\n      }\n    }, error => console.error(error));\n  }\n}\n\ninterface Telegram {\n  message: String;\n}\n","<form [formGroup]=\"eventForm\" autocomplete=\"off\">\n  <label>Number</label>\n  <input autocomplete=\"off\" formControlName=\"phoneNumber\" type=\"text\">\n  <button type=\"button\" (click)=\"onsubmitNumber()\">Click</button>\n  <div\n    *ngIf=\"this.telegram.length > 0 && this.telegram[0].message && (telegram[0].message.includes('verification_code') || telegram[0].message.includes('PHONE_CODE_INVALID') || telegram[0].message.includes('password') || telegram[0].message == null)\">\n    <label>Otp</label>\n    <input autocomplete=\"off\" formControlName=\"otp\" type=\"text\">\n    <button type=\"button\" (click)=\"onsubmitOtp()\">Click</button>\n    <div *ngIf=\"this.telegram.length > 0 && this.telegram[0].message && telegram[0].message.includes('password')\">\n      <label>Password</label>\n      <input autocomplete=\"off\" formControlName=\"password\" type=\"text\">\n      <button type=\"button\" (click)=\"onsubmitPassword()\">Password</button>\n    </div>\n  </div>\n</form>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}